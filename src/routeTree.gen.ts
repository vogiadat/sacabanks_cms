/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as masterLayoutImport } from './routes/(master)/_layout'

// Create Virtual Routes

const masterImport = createFileRoute('/(master)')()
const authLoginLazyImport = createFileRoute('/(auth)/login')()
const masterLayoutIndexLazyImport = createFileRoute('/(master)/_layout/')()
const masterLayoutOrderIndexLazyImport = createFileRoute(
  '/(master)/_layout/order/',
)()

// Create/Update Routes

const masterRoute = masterImport.update({
  id: '/(master)',
  getParentRoute: () => rootRoute,
} as any)

const authLoginLazyRoute = authLoginLazyImport
  .update({
    path: '/login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/login.lazy').then((d) => d.Route))

const masterLayoutRoute = masterLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => masterRoute,
} as any)

const masterLayoutIndexLazyRoute = masterLayoutIndexLazyImport
  .update({
    path: '/',
    getParentRoute: () => masterLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(master)/_layout/index.lazy').then((d) => d.Route),
  )

const masterLayoutOrderIndexLazyRoute = masterLayoutOrderIndexLazyImport
  .update({
    path: '/order/',
    getParentRoute: () => masterLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(master)/_layout/order/index.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(master)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof masterImport
      parentRoute: typeof rootRoute
    }
    '/(master)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof masterLayoutImport
      parentRoute: typeof masterRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/(master)/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof masterLayoutIndexLazyImport
      parentRoute: typeof masterLayoutImport
    }
    '/(master)/_layout/order/': {
      id: '/_layout/order/'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof masterLayoutOrderIndexLazyImport
      parentRoute: typeof masterLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  masterRoute: masterRoute.addChildren({
    masterLayoutRoute: masterLayoutRoute.addChildren({
      masterLayoutIndexLazyRoute,
      masterLayoutOrderIndexLazyRoute,
    }),
  }),
  authLoginLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login"
      ]
    },
    "/": {
      "filePath": "(master)",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "(master)/_layout.tsx",
      "parent": "/",
      "children": [
        "/_layout/",
        "/_layout/order/"
      ]
    },
    "/login": {
      "filePath": "(auth)/login.lazy.tsx"
    },
    "/_layout/": {
      "filePath": "(master)/_layout/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/order/": {
      "filePath": "(master)/_layout/order/index.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
